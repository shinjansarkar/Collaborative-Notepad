variables:
  IMAGE_NAME: shinjan7/collabrative_notepad
    
  APP_TAG : app
  NGINX_TAG : nginx

stages:
  - build
  - test
  
  

run_tests:
  stage: test
  image: python:3.10
  before_script:
    - pip install --upgrade pip
    - pip install -r requirements.txt
  script:
    - pytest tests/


build_image:
  stage: build
  image: docker:28.2.2

  services:
    - docker:28.2.2-dind
  variables:
      DOCKER_TLS_CERTDIR: "/certs"

  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
      
  script:
  # Build images
    - docker build -t $IMAGE_NAME:$APP_TAG .
    - docker build -t $IMAGE_NAME:$NGINX_TAG ./nginx
    
     # Push both images
    - docker push $IMAGE_NAME:$APP_TAG 
    - docker push $IMAGE_NAME:$NGINX_TAG




deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - echo "$EC2_SSH_KEY" > ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - ssh-keyscan -H "$EC2_HOST" >> ~/.ssh/known_hosts
  script:
    # Copy deploy.sh to EC2
    - scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa deploy.sh $EC2_USER@$EC2_HOST:/home/ubuntu/deploy.sh
    # Run the copied script
    - ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST "chmod +x /home/ubuntu/deploy.sh && bash /home/ubuntu/deploy.sh"












